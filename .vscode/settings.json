{
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]",
    "NOTE",
    "note",
    "@refs"
  ],
  "todo-tree.general.tagGroups": {
    "NOTE": ["NOTE", "@refs", "note"]
  },
  // note: https://primer.style/octicons/
  "todo-tree.highlights.customHighlight": {
    "NOTE": {
      "icon": "paintbrush",
      "foreground": "#66ff99"
    }
  },
  "go.testFlags": ["-v"],
  "go.testEnvFile": "${workspaceFolder}/.env",
  "go.testEnvVars": {
    "APP_ENV": "test",
    "CRYPTO_URI": "file:///${workspaceFolder}/fixtures/kb.bin"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "cSpell.words": [
    "aspida",
    "ciphertext",
    "envconfig",
    "filekms",
    "Lookuper",
    "openapi",
    "opentelemetry",
    "otel",
    "otlp",
    "otlptrace",
    "otlptracegrpc",
    "qrcode",
    "Rollbar",
    "sdktrace",
    "Secretbox",
    "semconv",
    "sharedtest",
    "testid"
  ],
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": [
      "source.organizeImports",
      "source.fixAll.eslint",
      "source.fixAll.stylelint"
    ]
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": [
      "source.organizeImports",
      "source.fixAll.eslint",
      "source.fixAll.stylelint"
    ]
  },
  "prettier.configPath": "frontend/.prettierrc.yaml",
  "prettier.ignorePath": "frontend/.prettierignore",
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": [
      "source.organizeImports",
      "source.fixAll.eslint",
      "source.fixAll.stylelint"
    ]
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": [
      "source.organizeImports",
      "source.fixAll.eslint",
      "source.fixAll.stylelint"
    ]
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "eslint.packageManager": "yarn",
  "eslint.workingDirectories": [
    {
      "mode": "auto"
    }
  ],
  "vitest.nodeEnv": {
    "NODE_ENV": "test"
  },
  "liveServer.settings.root": "/docs"
}
