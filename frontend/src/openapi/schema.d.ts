/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/enabled": {
    /** 有効なソーシャルログイン */
    get: operations["EnabledSocialLoginList"];
  };
  "/auth/logout": {
    /** ログアウト */
    get: operations["SocialLogout"];
  };
  "/auth/userinfo": {
    /** ログイン済みのユーザー情報取得 */
    get: operations["SocialLoginUserInfo"];
  };
  "/auth/{provider}/authorize": {
    /** 認証開始エンドポイント */
    get: operations["SocialLoginAuthorize"];
  };
  "/auth/{provider}/callback": {
    /** コールバック */
    get: operations["SocialLoginCallback"];
  };
  "/csrf_token": {
    /** CSRFトークンの生成 */
    get: operations["GetCSRFToken"];
  };
  "/manifest": {
    /** Manifestの取得 */
    get: operations["UIManifest"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "response.CsrfToken": {
      csrf_token?: string;
    };
    "response.EnabledSocialLogin": {
      socials?: (string)[];
    };
    "response.Error": {
      description?: string;
      field?: string;
      help?: string;
      message?: string;
    };
    "response.Errors": {
      errors?: (components["schemas"]["response.Error"])[];
    };
    "response.User": {
      email?: string;
      email_verified?: boolean;
      picture?: string;
      profile?: string;
      sub?: string;
      username?: string;
    };
    "response.WebUIManifest": {
      header_name?: string;
      token_base?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** 有効なソーシャルログイン */
  EnabledSocialLoginList: {
    requestBody?: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["response.EnabledSocialLogin"];
        };
      };
    };
  };
  /** ログアウト */
  SocialLogout: {
    requestBody?: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Found */
      302: {
        headers: {
          Location?: string;
        };
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  /** ログイン済みのユーザー情報取得 */
  SocialLoginUserInfo: {
    requestBody?: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["response.User"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["response.Errors"];
        };
      };
    };
  };
  /** 認証開始エンドポイント */
  SocialLoginAuthorize: {
    requestBody?: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Found */
      302: {
        headers: {
          Location?: string;
        };
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  /** コールバック */
  SocialLoginCallback: {
    requestBody?: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Found */
      302: {
        headers: {
          Location?: string;
        };
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["response.Errors"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["response.Errors"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": components["schemas"]["response.Errors"];
        };
      };
    };
  };
  /** CSRFトークンの生成 */
  GetCSRFToken: {
    requestBody?: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["response.CsrfToken"];
        };
      };
    };
  };
  /** Manifestの取得 */
  UIManifest: {
    requestBody?: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["response.WebUIManifest"];
        };
      };
    };
  };
}
